CWD             = $(shell pwd)

USE_FAKE_CMG    = off
OPT             = on
DEBUG           = off
USE_HPM         = off
USE_GPROF       = off
USE_TAU         = off
USE_TAU_PDT     = off
USE_OPENMP      = on
STATIC_LINK     = on
CFLAGS_CMG      = 

ifeq ($(USE_FAKE_CMG),on)
  CFLAGS_CMG    += -DCMG_FAKE 
else
  LIBS 		+=
endif

#------------------------------------------------ IBM ----------------------------------------------------------

XLBASE=/gpfs/ess2fs0/walkup/ibmcmp/xlf/latest

CFLAGS_CMG     += 

OPENMP_FLAGS    = -qsmp=omp
BIND = /gpfs/ess2fs0/walkup/codes/bind/xl/bindthreads_smp.o /gpfs/ess2fs0/walkup/codes/timers/libtimers.a
TRACE = /gpfs/ess2fs0/walkup/mpitrace/openmpi/nounderscore/libmpihpm_c_smp.so
#FLIBS = $(BIND) $(TRACE) -L/opt/ibm/xlf/15.1.3/lib -lxlf90_r -lxlfmath -lxl -Wl,-rpath=/opt/ibm/lib 
FLIBS = $(BIND) $(TRACE) -L$(XLBASE)/opt/ibm/lib -lxlf90_r -lxlfmath -lxl -Wl,-rpath=$(BASE)/opt/ibm/lib 


CPPFLAGS += -DLINUX -DLinux -DUSE_MPI -DOMPI_SKIP_MPICXX $(GPROF_FLAGS)
CPPFFLAGS = -WF,-DLINUX,-DLinux,-Dmpi,-DMPI,-DUSE_MPI,-DOMPI_SKIP_MPICXX $(OPENMP_FLAGS)

# MPI Definitions
MPI_INC_PATH    = -I/gpfs/ess2fs0/walkup/openmpi-1.8.8/include

MPI_LIB_PATH    = 
MPI_LIBS        = -lmpi_mpifh

LIBS 	       += $(MPI_LIBS) 
LIBPATH 	= 
INCPATH 	= $(MPI_INC_PATH)

CXX		= mpicxx
CC		= mpicc
F90             = /gpfs/ess2fs0/walkup/ibmcmp/xlf/latest/bin/xlf95_r
FPP             = /gpfs/ess2fs0/walkup/ibmcmp/xlf/latest/bin/xlf95_r
FCUDA		= /gpfs/ess2fs0/walkup/ibmcmp/xlf/latest/bin/xlcuf

F90FLAGS_OPT    =  -g -O3 -qarch=pwr8 -qtune=pwr8 -qpic $(OPENMP_FLAGS)
#HOTFLAGS        =  -g -O3 -qarch=pwr8 -qtune=pwr8 -qpic -qhot=novector -qsimd=auto -qlist -qsource
 HOTFLAGS        =  -O3 -qarch=pwr8 -qtune=pwr8 -qpic -qcuda
#HOTFLAGS        =  -g -O3 -qarch=pwr8 -qtune=pwr8 -qpic -qhot=novector -qsimd=noauto -qlist -qsource
CXXFLAGS_OPT	=  -g -O3 -qarch=pwr8 -qtune=pwr8 -qpic $(OPENMP_FLAGS)
CFLAGS_OPT	=  -g -O3 -qarch=pwr8 -qtune=pwr8 -qpic $(OPENMP_FLAGS)


 LD              = ar
 LIB_EXT         = a
 LDFLAGS         = rv
#LD = $(CXX)
#LDFLAGS = -qmkshrobj
#LIB_EXT= so

LINK            = $(CXX)
LINKFLAGS       = $(CXXFLAGS)

#
# These PLATFORM_*_EXTRAS flags are to add additional paths/libs for building 
# libInfrastructure.so, libTetonUtils.so and _TetonTest.so
#
# If linker generally needs lib paths..
#PLATFORM_LIBPATH_EXTRAS = -L/usr/local/tools/icc-11.1.073/lib/intel64/
PLATFORM_LIBPATH_EXTRAS = 

# Extra lib paths / libs for libInfrastructure.[a,so]

# Extra lib paths / libs for libTetonUtils.[a,so]
PLATFORM_TetonUtils_EXTRAS = 

# Extra lib paths / libs for SuOlsonTest
ifeq ($(STATIC_LINK),on)
PLATFORM_Infrastructure_EXTRAS = 
PLATFORM_EXE_EXTRAS = -L../CMG_CLEAN/src \
	-L../cmg2Kull/sources \
	-L../Teton 
else
PLATFORM_Infrastructure_EXTRAS = $(OPENMP_FLAGS) $(MPI_LIB_PATH) $(MPI_LIBS)
PLATFORM_EXE_EXTRAS = $(OPENMP_FLAGS) -L../CMG_CLEAN/src -Wl,-rpath,$(CWD)/../CMG_CLEAN/src \
	-L../cmg2Kull/sources -Wl,-rpath,$(CWD)/../cmg2Kull/sources\
	-L../Teton -Wl,-rpath,$(CWD)/../Teton 
endif

# Extra lib paths / libs for _TetonTest.so
ifeq ($(STATIC_LINK),on)
PLATFORM_TetonTest_EXTRAS = -L$(CWD)/../CMG_CLEAN/src -Wl,-rpath,$(CWD)/../CMG_CLEAN/src \
	-L$(CWD)/../cmg2Kull/sources  \
	-L$(CWD)/../Teton  \
	-L$(CWD)/../Install/lib \
	-lm -lpthread -lutil -ldl $(FLIBS)
else
PLATFORM_TetonTest_EXTRAS = $(OPENMP_FLAGS) $(MPI_LIB_PATH) -L$(CWD)/../CMG_CLEAN/src -Wl,-rpath,$(CWD)/../CMG_CLEAN/src \
	-L$(CWD)/../cmg2Kull/sources -Wl,-rpath,$(CWD)/../cmg2Kull/sources \
	-L$(CWD)/../Teton -Wl,-rpath,$(CWD)/../Teton \
	-L$(CWD)/../Install/lib -Wl,-rpath,$(CWD)/../Install/lib \
	-lm -lpthread -lutil -ldl $(FLIBS)
endif

%.o: %.F90
	$(F90) $(CPPFFLAGS) $(F90FLAGS) -c $*.F90 -o $@

#------------------------------------------------ END ----------------------------------------------------------


CXXFLAGS = $(CFLAGS_CMG) $(INCPATH)
CFLAGS = $(CFLAGS_CMG) $(INCPATH)
F90FLAGS = $(INCPATH)

ifeq ($(OPT),on)
  CXXFLAGS += $(CXXFLAGS_OPT) 
  CFLAGS += $(CFLAGS_OPT) 
  F90FLAGS += $(F90FLAGS_OPT) 
endif

ifeq ($(DEBUG),on)
  CXXFLAGS += $(CXXFLAGS_DEBUG) 
  CFLAGS += $(CFLAGS_DEBUG) 
  F90FLAGS += $(F90FLAGS_DEBUG) 
endif

%.o : %.cc
	$(CXX) -c $(CXXFLAGS) $(CPPFLAGS) $< -o $@

%.d: %.cc
	g++ -c $(CFLAGS_CMG) $(CPPFLAGS) $(INCPATH) $< -MM -MF $@


